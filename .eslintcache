[{"C:\\Users\\Akhal\\Documents\\Fall Bootcamp\\Projects\\project5\\saeed-malakhail-project-five\\saeed-malakhail-project-five\\src\\index.js":"1","C:\\Users\\Akhal\\Documents\\Fall Bootcamp\\Projects\\project5\\saeed-malakhail-project-five\\saeed-malakhail-project-five\\src\\firebase.js":"2","C:\\Users\\Akhal\\Documents\\Fall Bootcamp\\Projects\\project5\\saeed-malakhail-project-five\\saeed-malakhail-project-five\\src\\App.js":"3","C:\\Users\\Akhal\\Documents\\Fall Bootcamp\\Projects\\project5\\saeed-malakhail-project-five\\saeed-malakhail-project-five\\src\\reportWebVitals.js":"4","C:\\Users\\Akhal\\Documents\\Fall Bootcamp\\Projects\\project5\\saeed-malakhail-project-five\\saeed-malakhail-project-five\\src\\Ticket.js":"5"},{"size":500,"mtime":499162500000,"results":"6","hashOfConfig":"7"},{"size":570,"mtime":1606592978686,"results":"8","hashOfConfig":"7"},{"size":4578,"mtime":1606864969087,"results":"9","hashOfConfig":"7"},{"size":362,"mtime":499162500000,"results":"10","hashOfConfig":"7"},{"size":504,"mtime":1606854774065,"results":"11","hashOfConfig":"7"},{"filePath":"12","messages":"13","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"d67tvq",{"filePath":"14","messages":"15","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"16","messages":"17","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"18"},{"filePath":"19","messages":"20","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"21","messages":"22","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\Akhal\\Documents\\Fall Bootcamp\\Projects\\project5\\saeed-malakhail-project-five\\saeed-malakhail-project-five\\src\\index.js",[],"C:\\Users\\Akhal\\Documents\\Fall Bootcamp\\Projects\\project5\\saeed-malakhail-project-five\\saeed-malakhail-project-five\\src\\firebase.js",[],"C:\\Users\\Akhal\\Documents\\Fall Bootcamp\\Projects\\project5\\saeed-malakhail-project-five\\saeed-malakhail-project-five\\src\\App.js",["23"],"import { Component } from \"react\";\nimport Ticket from \"./Ticket\";\nimport firebase from \"./firebase\";\nimport \"./App.css\";\n\nclass App extends Component {\n  constructor() {\n    super();\n\n    this.state = {\n      tickets: [],\n      ticketRequester: \"\",\n      ticketDescription: \"\",\n      ticketPriority: \"\",\n      ticketDate: \"\",\n    };\n  }\n\n  componentDidMount() {\n    const dbRef = firebase.database().ref();\n\n    dbRef.on(\"value\", (data) => {\n      const firebaseDataObj = data.val();\n\n      let ticketsArray = [];\n\n      for (let ticketKey in firebaseDataObj) {\n        const propertyVal = firebaseDataObj[ticketKey];\n\n        const formattedObj = {\n          id: ticketKey,\n          name: propertyVal.name,\n          description: propertyVal.description,\n          priority: propertyVal.priority,\n          date: propertyVal.date,\n        };\n\n        ticketsArray.push(formattedObj);\n      }\n\n      console.log(ticketsArray);\n\n      this.setState({\n        tickets: ticketsArray,\n      });\n    });\n  }\n\n  onChangeTicketRequester = (event) => {\n    this.setState({\n      ticketRequester: event.target.value,\n    });\n  };\n\n  onChangeTicketDescription = (event) => {\n    this.setState({\n      ticketDescription: event.target.value,\n    });\n  };\n\n  onChangeTicketPriority = (event) => {\n    this.setState({\n      ticketPriority: event.target.value,\n    });\n  };\n\n  onSubmitTimestamp () {\n    let timestamp = new Date();\n    let formatDate = [];\n\n    let month = timestamp.getMonth() + 1;\n    let day = timestamp.getDate();\n    let year = timestamp.getFullYear();\n    let hour = timestamp.getHours();\n    let minutes = timestamp.getMinutes();\n    let seconds = timestamp.getSeconds();\n\n    formatDate = [month, \"/\", day, \"/\", year, \" \", hour, \":\", minutes, \":\", seconds];\n    console.log(formatDate);\n\n    this.state.ticketDate = formatDate;\n\n    this.setState({\n      ticketDate: formatDate,\n    });\n  };\n\n  onSubmit = (event) => {\n    event.preventDefault();\n\n    const dbRef = firebase.database().ref();\n\n    this.onSubmitTimestamp();\n\n    const rawObj = {\n      name: this.state.ticketRequester,\n      description: this.state.ticketDescription,\n      priority: this.state.ticketPriority,\n      date: this.state.ticketDate,\n    };\n\n    console.log(rawObj);\n\n    dbRef.push(rawObj);\n\n    this.setState({\n      ticketRequester: \"\",\n      ticketDescription: \"\",\n      ticketPriority: \"\",\n      ticketDate: \"\",\n    });\n  };\n\n  render() {\n    console.log(\"render method put some crap here\");\n    return (\n      <div className=\"App wrapper\">\n        <h1>Create New Ticket Request</h1>\n\n        <table className=\"rwd-table\">\n          <thead>\n            <tr>\n              <th scope=\"col\">Requester</th>\n              <th scope=\"col\">Description</th>\n              <th scope=\"col\">Priority</th>\n              <th scope=\"col\">Date</th>\n              <th scope=\"col\">Action</th>\n            </tr>\n          </thead>\n          <tbody>\n            {this.state.tickets.map((ticket) => {\n              return <Ticket ticket={ticket} key={ticket.id} />;\n            })}\n          </tbody>\n        </table>\n\n        <form action=\"\">\n          <label htmlFor=\"newRequester\">Requester: </label>\n          <input\n            type=\"text\"\n            id=\"newRequester\"\n            onChange={this.onChangeTicketRequester}\n            value={this.state.ticketRequester}\n          />\n          <label htmlFor=\"newDescription\">Description: </label>\n          <input\n            type=\"text\"\n            id=\"newDescription\"\n            onChange={this.onChangeTicketDescription}\n            value={this.state.ticketDescription}\n          />\n          <label htmlFor=\"newPriorityLow\">Low</label>\n          <input\n            type=\"radio\"\n            id=\"newPriorityLow\"\n            value=\"Low\"\n            onChange={this.onChangeTicketPriority}\n            checked={this.state.ticketPriority === \"Low\"}\n          />\n          <label htmlFor=\"newPriorityMedium\">Medium</label>\n          <input\n            type=\"radio\"\n            id=\"newPriorityMedium\"\n            value=\"Medium\"\n            onChange={this.onChangeTicketPriority}\n            checked={this.state.ticketPriority === \"Medium\"}\n          />\n          <label htmlFor=\"newPriorityHigh\">High</label>\n          <input\n            type=\"radio\"\n            id=\"newPriorityHigh\"\n            value=\"High\"\n            onChange={this.onChangeTicketPriority}\n            checked={this.state.ticketPriority === \"High\"}\n          />\n          <button onClick={this.onSubmit}>Submit</button>\n        </form>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","C:\\Users\\Akhal\\Documents\\Fall Bootcamp\\Projects\\project5\\saeed-malakhail-project-five\\saeed-malakhail-project-five\\src\\reportWebVitals.js",[],"C:\\Users\\Akhal\\Documents\\Fall Bootcamp\\Projects\\project5\\saeed-malakhail-project-five\\saeed-malakhail-project-five\\src\\Ticket.js",[],{"ruleId":"24","severity":1,"message":"25","line":81,"column":5,"nodeType":"26","endLine":81,"endColumn":15},"react/no-direct-mutation-state","Do not mutate state directly. Use setState().","MemberExpression"]